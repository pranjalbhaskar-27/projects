# Google OAuth Client Configuration
# To create these values:
# 1. Go to https://console.cloud.google.com/
# 2. Create a new project or select an existing one
# 3. Navigate to "APIs & Services" > "Credentials"
# 4. Click "Create Credentials" > "OAuth client ID"
# 5. Set up the OAuth consent screen if prompted
# 6. For Application type, choose "Web application"
# 7. Add authorized redirect URIs: http://localhost:3000/api/auth/callback/google
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# NextAuth Configuration
# The URL where your application is running
NEXTAUTH_URL=http://localhost:3000
# A random secret used to encrypt the NextAuth.js JWT
# Generate with: openssl rand -base64 32
NEXTAUTH_SECRET=your-nextauth-secret

# Google Drive Folder Configuration
# IMPORTANT: Extract only the ID portion from the folder URL
# Follow these steps to get the correct ID:
# 1. Go to Google Drive and open the folder you want to use
# 2. From the URL, copy only the ID part
#
# Example: From https://drive.google.com/drive/folders/1OSv9eRahC8MPh3sxjCvJQDkJiKqii7N6?usp=drive_link
# You should only use: 1OSv9eRahC8MPh3sxjCvJQDkJiKqii7N6
#
# REQUIRED PERMISSIONS:
# - Make sure the Google Drive API is enabled in your Google Cloud Console
# - Your Google account MUST have Editor/Contributor access to this folder
# - If using a test account, make sure it's added in the OAuth consent screen settings
GOOGLE_DRIVE_FOLDER_ID=folder-id-only-no-full-url

# Portal Configuration
# Password required for users to upload content to the portal
UPLOAD_PASSWORD=your-upload-password

# Debug settings
# Set to true to enable detailed debug logging in development
DEBUG=false